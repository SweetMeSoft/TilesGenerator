/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tilesforgooglemaps;

import java.awt.image.BufferedImage;
import java.io.File;
import java.util.LinkedList;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author erick
 */
public class MainWindow extends javax.swing.JFrame {

    private File selectedFile;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        FileFilter imageFilter = new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes());
        fchImage.setFileFilter(imageFilter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fchImage = new javax.swing.JFileChooser();
        btnGenerate = new javax.swing.JButton();
        btnSelect = new javax.swing.JButton();
        lblText = new javax.swing.JLabel();
        pgrTask = new javax.swing.JProgressBar();
        lblPath = new javax.swing.JLabel();
        spnTilts = new javax.swing.JSpinner();

        fchImage.setApproveButtonText("Select");
        fchImage.setApproveButtonToolTipText("");
        fchImage.setDialogTitle("Select an image");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tile Generator");
        setAlwaysOnTop(true);
        setLocationByPlatform(true);
        setResizable(false);

        btnGenerate.setText("Generate");
        btnGenerate.setEnabled(false);
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        btnSelect.setText("Select");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        lblText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblText.setText("Select an Image...");

        spnTilts.setModel(new javax.swing.SpinnerNumberModel(5, 0, 50, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 402, Short.MAX_VALUE)
                        .addComponent(spnTilts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSelect)
                        .addGap(18, 18, 18)
                        .addComponent(btnGenerate))
                    .addComponent(lblText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pgrTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblText)
                .addGap(18, 18, 18)
                .addComponent(pgrTask, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerate)
                    .addComponent(btnSelect)
                    .addComponent(lblPath)
                    .addComponent(spnTilts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        lblText.setText("Generating...");
        btnGenerate.setEnabled(false);
        btnSelect.setEnabled(false);
        int zoom = (int)spnTilts.getValue();
        int maximum = 0;
        int edge = 0;
        for (int i = 0; i <= zoom; i++) {
            edge = (int) Math.pow(2, i);
            maximum += (edge * edge);
        }

        pgrTask.setMaximum(maximum);

        Thread task = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    for (int i = 0; i <= zoom; i++) {
                        int edge = (int) Math.pow(2, i);
                        LinkedList<BufferedImage> tiles = ImageTools.split(lblPath.getText(), edge, edge);
                        for (int j = 0; j < edge; j++) {
                            for (int k = 0; k < edge; k++) {
                                ImageTools.resize(tiles.get((j * edge) + k), selectedFile.getParent() + "/map/" + i + "/" + k + "/" + j + ".png", 256, 256);
                                SwingUtilities.invokeLater(new Runnable() {
                                    @Override
                                    public void run() {
                                        pgrTask.setValue(pgrTask.getValue() + 1);
                                    }
                                });
                            }
                        }
                    }
                } catch (Exception e) {

                }
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        pgrTask.setValue(0);
                        lblText.setText("Tilts generated");
                        lblPath.setText("");
                        btnSelect.setEnabled(true);
                    }
                });
            }
        });
        task.start();
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        int result = fchImage.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fchImage.getSelectedFile();
            lblPath.setText(selectedFile.getAbsolutePath());
            lblText.setText("Generate the tilts");
            btnGenerate.setEnabled(true);
        }
    }//GEN-LAST:event_btnSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnSelect;
    private javax.swing.JFileChooser fchImage;
    private javax.swing.JLabel lblPath;
    private javax.swing.JLabel lblText;
    private javax.swing.JProgressBar pgrTask;
    private javax.swing.JSpinner spnTilts;
    // End of variables declaration//GEN-END:variables
}
